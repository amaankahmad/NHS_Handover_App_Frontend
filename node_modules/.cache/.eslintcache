[{"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/index.js":"1","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/reportWebVitals.js":"2","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Handover/Handover.js":"3","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/NewTask/NewTask.js":"4","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Login/login.js":"5","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/SignUp/Signup.js":"6","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/FollowUpTask/FollowUpTask.js":"7","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Consultant/ConsultantPage.js":"8","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Handover/PageTitle.js":"9","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/NewTask/DateTime.js":"10","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Handover/TasksBox.js":"11","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Handover/WelcomeBanner.js":"12","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/ShowPersons/ListPersonsComponent.jsx":"13","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/ShowPersons/PersonService.js":"14","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/SignUp/HospitalPersonnelService.js":"15","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/SignUp/CreateHospitalPerson.jsx":"16","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Login/Login.js":"17","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Login/LoginDoctor.jsx":"18","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/ForgotPassword/ForgotPassword.js":"19","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/ForgotPassword/ForgotPasswordBox.jsx":"20","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/NewTask/createNewTask.jsx":"21","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/NewTask/TaskService.js":"22","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/NewTask/CreateNewTask.jsx":"23","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/FollowUpTask/CreateFollowUp.jsx":"24","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/FollowUpTask/FollowUpTaskService.js":"25","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Handover/HandoverService.js":"26"},{"size":1173,"mtime":1642699402291,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1639474636609,"results":"29","hashOfConfig":"28"},{"size":887,"mtime":1642807739821,"results":"30","hashOfConfig":"28"},{"size":1297,"mtime":1642722425425,"results":"31","hashOfConfig":"28"},{"size":4503,"mtime":1642271216584,"results":"32","hashOfConfig":"28"},{"size":1716,"mtime":1642709213192,"results":"33","hashOfConfig":"28"},{"size":1769,"mtime":1642808811825,"results":"34","hashOfConfig":"28"},{"size":4570,"mtime":1642270821212,"results":"35","hashOfConfig":"28"},{"size":433,"mtime":1642794048175,"results":"36","hashOfConfig":"28"},{"size":1298,"mtime":1640463826293,"results":"37","hashOfConfig":"28"},{"size":9322,"mtime":1642809952571,"results":"38","hashOfConfig":"28"},{"size":1130,"mtime":1642802022275,"results":"39","hashOfConfig":"28"},{"size":1607,"mtime":1641580677768,"results":"40","hashOfConfig":"28"},{"size":306,"mtime":1641580263639,"results":"41","hashOfConfig":"28"},{"size":818,"mtime":1642787023207,"results":"42","hashOfConfig":"28"},{"size":6491,"mtime":1642715769069,"results":"43","hashOfConfig":"28"},{"size":3641,"mtime":1642701796230,"results":"44","hashOfConfig":"28"},{"size":2808,"mtime":1642700137650,"results":"45","hashOfConfig":"28"},{"size":1468,"mtime":1642699749213,"results":"46","hashOfConfig":"28"},{"size":2349,"mtime":1642700021727,"results":"47","hashOfConfig":"28"},{"size":11869,"mtime":1642721041518,"results":"48","hashOfConfig":"28"},{"size":321,"mtime":1642718130715,"results":"49","hashOfConfig":"28"},{"size":11869,"mtime":1642721041518,"results":"50","hashOfConfig":"28"},{"size":9112,"mtime":1642811160846,"results":"51","hashOfConfig":"28"},{"size":1011,"mtime":1642810708976,"results":"52","hashOfConfig":"28"},{"size":439,"mtime":1642803768781,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"n9ubfd",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"56"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"56"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/index.js",[],["111","112"],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/reportWebVitals.js",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Handover/Handover.js",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/NewTask/NewTask.js",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Login/login.js",["113","114"],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/SignUp/Signup.js",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/FollowUpTask/FollowUpTask.js",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Consultant/ConsultantPage.js",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Handover/PageTitle.js",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/NewTask/DateTime.js",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Handover/TasksBox.js",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Handover/WelcomeBanner.js",["115"],"import './HandoverScreen.css';\nimport React from 'react';\nimport DateTime from '../NewTask/DateTime'\nimport image from \"../Asset/taskIcon.png\"\nimport taskIcon from \"../Asset/taskIcon.png\";\nimport {useNavigate} from \"react-router\";\n\nexport default function WelcomeBanner({name}) {\n    let navigate = useNavigate() ;\n    function returnToShift() {\n        navigate('/shift')\n    }\n    return (\n         <section>\n            <div id=\"welcomeBanner\">\n                <div id=\"titleBanner\">Hello {name}</div>\n                <div id=\"taskIconW\">\n                    <DateTime />\n                    <img\n                        src={image}\n                        height={75}\n                        alt=\"taskIcon\"\n                        id=\"taskIconImgW\"\n                    />\n                </div>\n            </div>\n             <button onClick={returnToShift} style={{float: \"right\", marginTop: \"20px\", marginRight: \"20px\",\n                 color: \"white\", borderColor: \"DodgerBlue\" ,backgroundColor: \"DodgerBlue\", borderRadius: \"10px\" ,\n                 padding: \"10px\"}}> Back to Login  </button>\n         </section>\n    );\n}","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/ShowPersons/ListPersonsComponent.jsx",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/ShowPersons/PersonService.js",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/SignUp/HospitalPersonnelService.js",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/SignUp/CreateHospitalPerson.jsx",["116","117","118","119","120","121","122","123"],"import React, {Component} from 'react';\nimport {MemoryRouter, useHistory} from \"react-router\"\nimport HospitalPersonnelService from \"./HospitalPersonnelService\";\nimport {useNavigate} from \"react-router\";\n\nclass CreateHospitalPerson extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            name: '',\n            email: '',\n            numPager: '',\n            password: '',\n            confirmPassword: '',\n            role: '',\n            msg: '',\n        }\n\n        this.changeNameHandler = this.changeNameHandler.bind(this);\n        this.changeEmailHandler = this.changeEmailHandler.bind(this);\n        this.changeNumPagerHandler = this.changeNumPagerHandler.bind(this);\n        this.changePasswordHandler = this.changePasswordHandler.bind(this);\n        this.changeConfirmPasswordHandler = this.changeConfirmPasswordHandler.bind(this);\n        this.changeRoleHandler = this.changeRoleHandler.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    saveHospitalPerson = (e) => {\n        let hospitalPersonnel = {name: this.state.name, email: this.state.email,\n                                    numPager: this.state.numPager, password: this.state.password,};\n        console.log('Hospital Personnel =>' + JSON.stringify(hospitalPersonnel))\n\n        if (this.state.role === \"Consultant\") {\n            HospitalPersonnelService.createConsultant(hospitalPersonnel).then(res => {});\n        }\n        else {\n            HospitalPersonnelService.createJuniorDoctor(hospitalPersonnel).then(res => {});\n        }\n    }\n\n    changeNameHandler=(event) => {\n        this.setState({name: event.target.value});\n    }\n\n    changeEmailHandler=(event) => {\n        this.setState({email: event.target.value});\n    }\n    changeNumPagerHandler=(event) => {\n        this.setState({numPager: event.target.value});\n    }\n    changePasswordHandler=(event) => {\n        this.setState({password: event.target.value});\n    }\n    changeConfirmPasswordHandler=(event) => {\n        this.setState({confirmPassword: event.target.value});\n    }\n    changeRoleHandler=(event) => {\n        this.setState({role: event.target.value});\n    }\n\n    validation(e) {\n        if (this.state.password!==this.state.confirmPassword) {\n            this.setState({msg:\"Passwords do not match.\"});\n            return false;\n        }\n        return true;\n    }\n\n    checkEntries(e) {\n        if (this.state.name===\"\" || this.state.numPager===\"\" || this.state.email===\"\" || this.state.password === \"\"\n                || this.state.confirmPassword===\"\" || this.state.role === \"empty\") {\n            this.setState({msg: \"Please fill out all entries.\"});\n            return false;\n        }\n        return true;\n    }\n\n    handleSubmit(e) {\n        e.preventDefault(); // Prevent clicking submit with empty args\n        if(this.checkEntries()) {\n            if(this.validation()) {\n                this.saveHospitalPerson();\n                this.props.register();\n            }\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                {/*<form>*/}\n                    <div className=\"row\">\n                        <label>\n                            <b>Name:</b>\n                        </label>\n                        <input className = \"form-control\" type=\"inputSignup\" name=\"name\"type=\"text\" required\n                               value={this.state.name} onChange={this.changeNameHandler}/>\n                    </div>\n                    <div className=\"row\">\n                        <label>\n                            <b>Pager Number:</b>\n                        </label>\n                        <input className = \"form-control\" type=\"inputSignup\" name=\"numPager\" type=\"text\" required\n                               value={this.state.numPager} onChange={this.changeNumPagerHandler}/>\n                    </div>\n                    <div className=\"row\">\n                        <label>\n                            <b>Email:</b>\n                        </label>\n                        <input className = \"form-control\" type=\"inputSignup\" name=\"email\" type=\"email\" required\n                               value={this.state.email} onChange={this.changeEmailHandler}/>\n                    </div>\n                    <div className=\"row\">\n                        <label>\n                            <b>Password:</b>\n                        </label>\n                        <input className = \"form-control\" type=\"inputSignup\" name=\"password\" type=\"password\" required\n                               value={this.state.password} onChange={this.changePasswordHandler}/>\n                    </div>\n                    <div className=\"row\">\n                        <label>\n                            <b>Confirm Password:</b>\n                        </label>\n                        <input className = \"form-control\" type=\"inputSignup\" name=\"confirmPassword\" type=\"password\"\n                               required value={this.state.confirmPassword} onChange={this.changeConfirmPasswordHandler}/>\n                    </div>\n                    <div className=\"row\">\n                        <label htmlFor=\"role\">\n                            <b>Role:</b>\n                        </label>\n                        <select name=\"role\" type=\"role\" id=\"role\" required onChange={this.changeRoleHandler}>\n                            <option value=\"empty\"></option>\n                            <option value=\"Junior Doctor\">FY</option>\n                            <option value=\"Junior Doctor\">SHO</option>\n                            <option value=\"Consultant\">Spr/Cons</option>\n                        </select>\n                        <div>\n                            <strong>\n                                <div className=\"text-danger\" id = \"passwordCheck\">\n                                    {this.state.msg}\n                                </div>\n                            </strong>\n                        </div>\n                        <div id=\"actionButtonsSignUp\">\n                            <button id=\"actionButtonSignUp1\" onClick={this.props.home}>\n                                Return to login page\n                            </button>\n                            <button id=\"actionButtonSignUp2\" onClick={this.handleSubmit}>Register</button>\n                        </div>\n                    </div>\n                {/*</form>*/}\n            </div>\n        );\n    }\n}\n\nexport default CreateHospitalPerson;\n","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Login/Login.js",["124","125"],"import React, {useState} from 'react';\nimport './Login.css';\nimport handover_logo from \"../Asset/handover_logo.jpeg\";\nimport imperial_logo from \"../Asset/imperiallogo.png\";\nimport sun from \"../Asset/sun.png\";\nimport moon from \"../Asset/moon.png\";\nimport {Routes, Route} from \"react-router-dom\";\nimport { useNavigate } from 'react-router';\nimport LoginDoctor from \"./LoginDoctor\";\n\nfunction Header(props){\n    return(\n\n        <header>\n            <div className=\"header\">\n            <img src={handover_logo} id=\"ourLogo\" height={100} alt=\"logo\"/>\n            <img src={imperial_logo} id=\"nhsLogo\" height={80} alt=\"logo\"/>\n            \n            </div>\n        </header>\n\n    )\n}\n\nfunction Main(){\n\n    const [data,setData]=useState(null)\n    function getData(val)\n    {\n        setData(val.target.value)\n        console.warn(val.target.value)\n    }\n    let navigate = useNavigate();\n    function navigateToShift() {\n        navigate('/shift')\n    }\n    function navigateToForgotPassword() {\n        navigate('/ForgotPassword')\n    }\n    function navigateToSignUp() {\n        navigate('/Signup')\n    }\n\n    return(\n    <section id=\"signinForm\">\n        <div className=\"form-images\">\n            <div id=\"form\">\n                <div id=\"headerSignIn\">\n                    <h2> Login Page </h2>\n                </div>\n                    <LoginDoctor login = {navigateToShift} signUp = {navigateToSignUp} forgotPassword = {navigateToForgotPassword}/>\n            </div>\n        </div>\n    </section>\n    \n    )\n\n}\nfunction Footer(){\n\n    return(\n\n        <footer>\n        </footer>\n    )\n}\nfunction Header2(){\n    return(\n\n        <header>\n            <div className=\"header\">\n            <img src={handover_logo} id=\"ourLogo\" height={100} alt=\"logo\"/>\n            <img src={imperial_logo} id=\"nhsLogo\" height={80} alt=\"logo\"/>\n            </div>\n        </header>\n\n    )\n}\n\nfunction Main2(){\n    let navigate = useNavigate() ;\n   function navigateToNewTask() {\n       navigate('/NewTask')\n   }\n    function navigateToHandover() {\n        navigate('/Handover')\n    }\n    function returnToLogIn() {\n        navigate('/')\n    }\n    return(\n        <section>\n            <p></p>\n            <div>\n            <button id=\"buttonSun\" onClick={navigateToNewTask} style={{backgroundColor:'White'}}>\n                <figure>\n                <img src={sun} height={180} alt=\"sun\"/>\n                    <figcaption>\n                        Ending Day Shift\n                    </figcaption>\n                </figure>\n            </button>\n            <button id=\"buttonMoon\" onClick={navigateToHandover} style={{backgroundColor:'White'}}>\n                <figure>\n                <img src={moon} height={180} alt=\"moon\"/>\n                    <figcaption>\n                        Start Evening Shift\n                    </figcaption>\n                </figure>\n            </button>\n                <button id=\"buttonSignOut\" onClick={returnToLogIn}  >\n                    Sign out\n                </button>\n            </div>\n\n        </section>\n\n    )\n}\n\nfunction Login(){\n    return(\n        <div className={\"login\"}>\n            <Routes>\n            <Route path=\"/\" element={ <>\n            <Header />\n            <Main/>\n            <Footer/>\n            </>}/>\n\n                <Route path=\"/shift\" element={ <>\n                    <Header2 />\n                    <Main2/>\n                    {/*<div className=\"container\">*/}\n                    {/*    <Header2 />*/}\n                    {/*    <ListPersonsComponent/>*/}\n                    {/*</div>*/}\n                </>}/>\n            </Routes>\n        </div>\n    );\n}\nexport default Login;\n","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Login/LoginDoctor.jsx",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/ForgotPassword/ForgotPassword.js",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/ForgotPassword/ForgotPasswordBox.jsx",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/NewTask/createNewTask.jsx",["126","127","128"],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/NewTask/TaskService.js",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/NewTask/CreateNewTask.jsx",["129","130","131"],"import React, {Component, useEffect, useState} from 'react';\nimport TaskService from \"./TaskService\";\n\nclass CreateNewTask extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            patientName: 'TBD',\n            patientMRN: '',\n            patientLoc: 'TBD',\n            patientDOB: 'TBD',\n            patientSex: 'TBD',\n            patientCovidStatus: '',\n            taskType: '',\n            taskPriority: '',\n            taskSeniority: 'TBD',\n            taskSchedule: 'TBD',\n            taskAdditionalNotes: '',\n            msg: '',\n        }\n        this.changePatientNameHandler = this.changePatientNameHandler.bind(this);\n        this.changePatientMRNHandler = this.changePatientMRNHandler.bind(this);\n        this.changePatientLocHandler = this.changePatientLocHandler.bind(this);\n        this.changePatientDOBHandler = this.changePatientDOBHandler.bind(this);\n        this.changePatientSexHandler = this.changePatientSexHandler.bind(this);\n        this.changePatientCovidStatusHandler = this.changePatientCovidStatusHandler.bind(this);\n        this.changeTaskTypeHandler = this.changeTaskTypeHandler.bind(this);\n        this.changeTaskPriorityHandler = this.changeTaskPriorityHandler.bind(this);\n        this.changeTaskSeniorityHandler = this.changeTaskSeniorityHandler.bind(this);\n        this.changeTaskScheduleHandler = this.changeTaskScheduleHandler.bind(this);\n        this.changeTaskAdditionalNotesHandler = this.changeTaskAdditionalNotesHandler.bind(this);\n\n        this.handleNewTask = this.handleNewTask.bind(this);\n\n    }\n\n    saveTask = (e) => {\n        let pat = {name: this.state.patientName, dob: this.state.patientDOB,\n            sex: this.state.patientSex, location: this.state.patientLoc, numMRN: this.state.patientMRN,};\n        let doc = {name: \"TBD\", dob: \"TBD\", sex: \"TBD\", email: \"TBD\", numPager: \"TBD\", }\n\n        var today = new Date();\n        var date = today.getDate() + '/' + (today.getMonth()+1);\n        var time = today.getHours() + ':' + today.getMinutes();\n        let task = {patient: pat, seniority: this.state.taskSeniority, notes: this.state.taskAdditionalNotes,\n            // History will be N/A since this is a new task and not a follow up task\n            history: 'N/A', taskDescript: this.state.taskType, creationTime: date+' '+time,};\n        // History will be N/A since this is a new task and not a follow up task\n        // let task = {notes: this.state.taskAdditionalNotes, creationTime: date+' '+time, history: 'N/A',\n        //     seniority: this.state.taskSeniority, taskDescript: this.state.taskType, doctorOfTask: doc, patient: pat};\n        console.log('New Task =>' + JSON.stringify(task))\n\n        TaskService.createTask(task).then(res => {});\n    }\n\n    changePatientNameHandler=(event) => {\n        this.setState({patientName: event.target.value});\n    }\n    changePatientMRNHandler=(event) => {\n        this.setState({patientMRN: event.target.value});\n    }\n    changePatientLocHandler=(event) => {\n        this.setState({patientLoc: event.target.value});\n    }\n    changePatientDOBHandler=(event) => {\n        this.setState({patientDOB: event.target.value});\n    }\n    changePatientSexHandler=(event) => {\n        this.setState({patientSex: event.target.value});\n    }\n    changePatientCovidStatusHandler=(event) => {\n        this.setState({patientCovidStatus: event.target.value});\n    }\n    changeTaskTypeHandler=(event) => {\n        this.setState({taskType: event.target.value});\n    }\n    changeTaskPriorityHandler=(event) => {\n        this.setState({taskPriority: event.target.value});\n    }\n    changeTaskSeniorityHandler=(event) => {\n        this.setState({taskSeniority: event.target.value});\n    }\n    changeTaskScheduleHandler=(event) => {\n        this.setState({taskSchedule: event.target.value});\n    }\n    changeTaskAdditionalNotesHandler=(event) => {\n        this.setState({taskAdditionalNotes: event.target.value});\n    }\n\n    checkEntries(e) {\n        if (this.state.patientMRN===\"\" || this.state.patientCovidStatus===\"\"\n                || this.state.taskType===\"\" || this.state.taskPriority === \"\") {\n            this.setState({msg: \"Please fill out all required fields (*).\"});\n            return false;\n        }\n        return true;\n    }\n\n    handleNewTask(e) {\n        e.preventDefault(); // Prevent clicking submit with empty args\n        console.log(JSON.stringify(this.state))\n        if(this.checkEntries()) {\n            this.saveTask();\n            this.props.home();\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <div id=\"containerOneN\">\n                    <div id=\"containerOneLeftN\">\n                        <div id=\"patientNameN\">\n                            <input\n                                type=\"text\"\n                                placeholder={\"Patient Name\"}\n                                className = \"form-control\"\n                                onChange={this.changePatientNameHandler}\n                            />\n                        </div>\n                        <div id=\"wardNumberN\">\n                            <input\n                                type=\"text\"\n                                placeholder={\"Ward #\"}\n                                className = \"form-control\"\n                                onChange={this.changePatientLocHandler}\n                            />\n                        </div>\n                        <div id=\"sexN\">\n                            <p id=\"sexLabelN\">Sex :</p>\n                            <div htmlFor=\"maleN\" id=\"maleLabelN\">\n                                M\n                                <input\n                                    type=\"checkbox\" id=\"maleN\" name=\"M\"\n                                    value=\"Male\" onChange={this.changePatientSexHandler}/>\n                            </div>\n                            <label htmlFor=\"female\" id=\"femaleLabelN\">\n                                F\n                                <input\n                                    type=\"checkbox\" id=\"femaleN\" name=\"F\"\n                                    value=\"Female\" onChange={this.changePatientSexHandler}/>\n                            </label>\n                        </div>\n                    </div>\n                    <div id=\"containerOneRightN\">\n                        <div id=\"MRNNumberN\">\n                            <input\n                                type=\"text\"\n                                placeholder={\"Patient MRN Number*\"}\n                                className = \"form-control\"\n                                onChange={this.changePatientMRNHandler}\n                            />\n                        </div>\n                        <div id=\"DOBN\">\n                            <input className = \"form-control\" type=\"text\"\n                                   placeholder={\"DOB\"} onChange={this.changePatientDOBHandler}/>\n                        </div>\n                        <div id=\"priorityN\">\n                            <p id=\"priorityLabel\">Priority* :</p>{\" \"}\n                            <div className=\"checkLabel\">\n                                <p htmlFor=\"High\" id=\"urgentLabelN\">\n                                    Urgent\n                                </p>\n\n                                <input type=\"checkbox\" id=\"urgentN\" name=\"Urgent\"\n                                       value = \"true\" onChange={this.changeTaskPriorityHandler}/>\n                            </div>\n                            <div className=\"checkLabel\">\n                                <p htmlFor=\"Low\" id=\"nonUrgentLabelN\">\n                                    Non-Urgent\n                                </p>\n                                <input\n                                    type=\"checkbox\" id=\"nonUrgentN\" name=\"Non-Urgent\"\n                                    value = \"false\" onChange={this.changeTaskPriorityHandler}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div>\n                    <select name=\"taskType\" defaultValue=\"\" id=\"taskTypeN\" onChange={this.changeTaskTypeHandler}>\n                        <option value=\"\">Task Type*</option>\n                        <option value=\"completeBloodTest\">Complete Blood Test</option>\n                        <option value=\"checkECGXRay\">Check ECG/ X-RAY</option>\n                        <option value=\"completeClinicalReview\"> Complete Clinical Review </option>\n                        <option value=\"bespokeTask\">Other Task</option>\n                    </select>\n                </div>\n\n                <div id=\"containerThreeN\">\n                    <div id=\"inputRow\">\n                        <div id=\"seniority\">\n                            Seniority :\n                            <p htmlFor=\"Junior\" id=\"juniorLabelN\">\n                                FY\n                            </p>\n                            <input type=\"checkbox\" id=\"juniorN\" name=\"Junior\"\n                                   value = \"FY\" onChange={this.changeTaskSeniorityHandler}/>\n                            <p htmlFor=\"SHO\" id=\"SHOLabelN\">\n                                SHO\n                            </p>\n                            <input type=\"checkbox\" id=\"SHON\" name=\"SHO\"\n                                   value = \"SHO\" onChange={this.changeTaskSeniorityHandler}/>\n                            {/*<p htmlFor=\"Consultant\" id=\"consultantLabelN\">*/}\n                            {/*    Consultant*/}\n                            {/*</p>*/}\n                            {/*<input type=\"checkbox\" id=\"consultantN\" name=\"Consultant\" />*/}\n                        </div>\n                        <div id=\"covidStatusInput\">\n                            <div id=\"covidStatus\">Covid Status* :</div>{\" \"}\n                            <p htmlFor=\"redN\" id=\"redLabelN\">\n                                Red\n                            </p>\n                            <input type=\"checkbox\" id=\"redN\" name=\"redN\"\n                                   value = \"true\" onChange={this.changePatientCovidStatusHandler}/>\n                            <p htmlFor=\"blueN\" id=\"blueLabelN\">\n                                Blue{\" \"}\n                            </p>\n                            <input type=\"checkbox\" id=\"blueN\" name=\"blueN\"\n                                   value = \"false\" onChange={this.changePatientCovidStatusHandler}/>\n                        </div>\n                        <div id=\"scheduleN\">\n                            {\" \"}\n                            <input className = \"form-control\" type=\"text\" placeholder={\"Schedule\"}\n                                   onChange={this.changeTaskScheduleHandler}/>\n                        </div>\n                    </div>\n                </div>\n\n                <div id=\"containerFourN\">\n                    <div id=\"additionalNotesBoxN\">\n                        <input className = \"form-control\" id=\"additionalNotesN\" type=\"text\"\n                               placeholder={\"Additional Notes\"} onChange={this.changeTaskAdditionalNotesHandler}/>\n                    </div>\n                </div>\n                <div>\n                    <strong>\n                        <div className=\"text-danger\" id = \"entryCheck\">\n                            {this.state.msg}\n                        </div>\n                    </strong>\n                </div>\n                <div id=\"actionButtons\">\n                    <div id=\"addTaskDiv\">\n                        <button id=\"AddTaskN\" onClick={this.handleNewTask}>Add Task</button>\n                    </div>\n                    <button id=\"ReturnToLoginN\" onClick={this.props.home}>\n                        Go Back\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CreateNewTask;","/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/FollowUpTask/CreateFollowUp.jsx",[],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/FollowUpTask/FollowUpTaskService.js",["132","133","134"],"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Handover/HandoverService.js",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":9,"column":8,"nodeType":"141","messageId":"142","endLine":9,"endColumn":28},{"ruleId":"139","severity":1,"message":"143","line":27,"column":12,"nodeType":"141","messageId":"142","endLine":27,"endColumn":16},{"ruleId":"139","severity":1,"message":"144","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":16},{"ruleId":"139","severity":1,"message":"145","line":2,"column":9,"nodeType":"141","messageId":"142","endLine":2,"endColumn":21},{"ruleId":"139","severity":1,"message":"146","line":2,"column":23,"nodeType":"141","messageId":"142","endLine":2,"endColumn":33},{"ruleId":"139","severity":1,"message":"147","line":4,"column":9,"nodeType":"141","messageId":"142","endLine":4,"endColumn":20},{"ruleId":"148","severity":1,"message":"149","line":98,"column":89,"nodeType":"150","messageId":"151","endLine":98,"endColumn":100},{"ruleId":"148","severity":1,"message":"149","line":105,"column":94,"nodeType":"150","messageId":"151","endLine":105,"endColumn":105},{"ruleId":"148","severity":1,"message":"149","line":112,"column":91,"nodeType":"150","messageId":"151","endLine":112,"endColumn":103},{"ruleId":"148","severity":1,"message":"149","line":119,"column":94,"nodeType":"150","messageId":"151","endLine":119,"endColumn":109},{"ruleId":"148","severity":1,"message":"149","line":126,"column":101,"nodeType":"150","messageId":"151","endLine":126,"endColumn":116},{"ruleId":"139","severity":1,"message":"143","line":27,"column":12,"nodeType":"141","messageId":"142","endLine":27,"endColumn":16},{"ruleId":"139","severity":1,"message":"152","line":28,"column":14,"nodeType":"141","messageId":"142","endLine":28,"endColumn":21},{"ruleId":"139","severity":1,"message":"153","line":1,"column":27,"nodeType":"141","messageId":"142","endLine":1,"endColumn":36},{"ruleId":"139","severity":1,"message":"154","line":1,"column":38,"nodeType":"141","messageId":"142","endLine":1,"endColumn":46},{"ruleId":"139","severity":1,"message":"155","line":41,"column":13,"nodeType":"141","messageId":"142","endLine":41,"endColumn":16},{"ruleId":"139","severity":1,"message":"153","line":1,"column":27,"nodeType":"141","messageId":"142","endLine":1,"endColumn":36},{"ruleId":"139","severity":1,"message":"154","line":1,"column":38,"nodeType":"141","messageId":"142","endLine":1,"endColumn":46},{"ruleId":"139","severity":1,"message":"155","line":41,"column":13,"nodeType":"141","messageId":"142","endLine":41,"endColumn":16},{"ruleId":"139","severity":1,"message":"156","line":2,"column":8,"nodeType":"141","messageId":"142","endLine":2,"endColumn":32},{"ruleId":"139","severity":1,"message":"157","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":23},{"ruleId":"139","severity":1,"message":"158","line":13,"column":13,"nodeType":"141","messageId":"142","endLine":13,"endColumn":17},"no-native-reassign",["159"],"no-negated-in-lhs",["160"],"no-unused-vars","'ListPersonsComponent' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used.","'taskIcon' is defined but never used.","'MemoryRouter' is defined but never used.","'useHistory' is defined but never used.","'useNavigate' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","'getData' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'doc' is assigned a value but never used.","'HospitalPersonnelService' is defined but never used.","'HandoverService' is defined but never used.","'task' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]