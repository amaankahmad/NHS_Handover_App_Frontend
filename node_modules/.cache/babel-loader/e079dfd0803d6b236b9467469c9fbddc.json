{"ast":null,"code":"var _jsxFileName = \"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/nhs_handover/src/NewTask/DateTime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DateTime = () => {\n  _s();\n\n  var [date, setDate] = useState(new Date());\n  useEffect(() => {\n    var timer = setInterval(() => setDate(new Date()), 1000);\n    return function cleanup() {\n      clearInterval(timer);\n    };\n  });\n  var time = date.toLocaleTimeString();\n  let weekday = date.toLocaleString(window.navigator.language, {\n    weekday: 'long'\n  });\n  let monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let monthName = monthNames[date.getMonth()];\n  let dateNum = date.getDate();\n  let dateEndOptions = ['th ', 'st ', 'nd '];\n\n  if (dateNum % 10 === 1) {\n    var dateEnd = dateEndOptions[1];\n  } else if (dateNum % 10 === 2) {\n    dateEnd = dateEndOptions[2];\n  } else {\n    dateEnd = dateEndOptions[0];\n  }\n\n  var dateFormatted = weekday + ', ' + dateNum + dateEnd + monthName;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      float: \"right\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        fontWeight: \"bold\",\n        fontSize: \"16px\"\n      },\n      children: [\" \", dateFormatted]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        float: \"right\",\n        fontWeight: \"bold\",\n        fontSize: \"16px\"\n      },\n      children: [\" \", time.slice(0, -3)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DateTime, \"wA6O/DG42+wW3R8blSfoVhukeio=\");\n\n_c = DateTime;\nexport default DateTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"DateTime\");","map":{"version":3,"sources":["/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/nhs_handover/src/NewTask/DateTime.js"],"names":["React","useState","useEffect","DateTime","date","setDate","Date","timer","setInterval","cleanup","clearInterval","time","toLocaleTimeString","weekday","toLocaleString","window","navigator","language","monthNames","monthName","getMonth","dateNum","getDate","dateEndOptions","dateEnd","dateFormatted","float","fontWeight","fontSize","slice"],"mappings":";;;AAAA,OAAQA,KAAR,IAAiBC,QAAjB,EAA4BC,SAA5B,QAA6C,OAA7C;;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAE1B,MAAI,CAACC,IAAD,EAAMC,OAAN,IAAiBJ,QAAQ,CAAC,IAAIK,IAAJ,EAAD,CAA7B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,KAAK,GAAGC,WAAW,CAAC,MAAIH,OAAO,CAAC,IAAIC,IAAJ,EAAD,CAAZ,EAA0B,IAA1B,CAAvB;AACA,WAAO,SAASG,OAAT,GAAmB;AACtBC,MAAAA,aAAa,CAACH,KAAD,CAAb;AACH,KAFD;AAIH,GANQ,CAAT;AAQA,MAAII,IAAI,GAAGP,IAAI,CAACQ,kBAAL,EAAX;AACA,MAAIC,OAAO,GAAGT,IAAI,CAACU,cAAL,CAAoBC,MAAM,CAACC,SAAP,CAAiBC,QAArC,EAA8C;AAACJ,IAAAA,OAAO,EAAE;AAAV,GAA9C,CAAd;AACA,MAAIK,UAAU,GAAG,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,MAAzD,EAAiE,QAAjE,EAA2E,WAA3E,EAAwF,SAAxF,EAAmG,UAAnG,EAA+G,UAA/G,CAAjB;AACA,MAAIC,SAAS,GAAGD,UAAU,CAACd,IAAI,CAACgB,QAAL,EAAD,CAA1B;AAEA,MAAIC,OAAO,GAAGjB,IAAI,CAACkB,OAAL,EAAd;AACA,MAAIC,cAAc,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,CAArB;;AAEA,MAAIF,OAAO,GAAC,EAAR,KAAe,CAAnB,EAAsB;AAClB,QAAIG,OAAO,GAAGD,cAAc,CAAC,CAAD,CAA5B;AACH,GAFD,MAGK,IAAIF,OAAO,GAAC,EAAR,KAAe,CAAnB,EAAsB;AACvBG,IAAAA,OAAO,GAAGD,cAAc,CAAC,CAAD,CAAxB;AACH,GAFI,MAGA;AACDC,IAAAA,OAAO,GAAGD,cAAc,CAAC,CAAD,CAAxB;AACH;;AAED,MAAIE,aAAa,GAAGZ,OAAO,GAAG,IAAV,GAAiBQ,OAAjB,GAA2BG,OAA3B,GAAqCL,SAAzD;AAEA,sBACI;AAAK,IAAA,KAAK,EAAE;AAACO,MAAAA,KAAK,EAAC;AAAP,KAAZ;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,UAAU,EAAE,MAAb;AAAqBC,QAAAA,QAAQ,EAAE;AAA/B,OAAX;AAAA,sBAAqDH,aAArD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAI,MAAA,KAAK,EAAE;AAACC,QAAAA,KAAK,EAAC,OAAP;AAAgBC,QAAAA,UAAU,EAAE,MAA5B;AAAoCC,QAAAA,QAAQ,EAAE;AAA9C,OAAX;AAAA,sBAAoEjB,IAAI,CAACkB,KAAL,CAAW,CAAX,EAAa,CAAC,CAAd,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAxCM;;GAAM1B,Q;;KAAAA,Q;AA0Cb,eAAeA,QAAf","sourcesContent":["import  React, { useState , useEffect } from 'react'\n\nexport const DateTime = () => {\n\n    var [date,setDate] = useState(new Date());\n\n    useEffect(() => {\n        var timer = setInterval(()=>setDate(new Date()), 1000 )\n        return function cleanup() {\n            clearInterval(timer)\n        }\n\n    });\n\n    var time = date.toLocaleTimeString();\n    let weekday = date.toLocaleString(window.navigator.language,{weekday: 'long'});\n    let monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let monthName = monthNames[date.getMonth()];\n\n    let dateNum = date.getDate();\n    let dateEndOptions = ['th ', 'st ', 'nd ']\n\n    if (dateNum%10 === 1) {\n        var dateEnd = dateEndOptions[1];\n    }\n    else if (dateNum%10 === 2) {\n        dateEnd = dateEndOptions[2];\n    }\n    else {\n        dateEnd = dateEndOptions[0];\n    }\n\n    var dateFormatted = weekday + ', ' + dateNum + dateEnd + monthName\n\n    return(\n        <div style={{float:\"right\"}}>\n            <p> </p>\n            <h4 style={{fontWeight: \"bold\", fontSize: \"16px\"}}> {dateFormatted}</h4>\n            <h4 style={{float:\"right\", fontWeight: \"bold\", fontSize: \"16px\"}}> {time.slice(0,-3)}</h4>\n\n        </div>\n    )\n}\n\nexport default DateTime"]},"metadata":{},"sourceType":"module"}