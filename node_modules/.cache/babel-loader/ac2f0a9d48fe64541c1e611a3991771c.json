{"ast":null,"code":"var _jsxFileName = \"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/FollowUpTask/FollowUpTask.js\",\n    _s = $RefreshSig$();\n\n// import React, { Component } from \"react\";\n// import ReactDOM from \"react-dom\";\n//import \"./index.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css'; // import DropdownButton from 'react-bootstrap/DropdownButton';\n// import Dropdown from 'react-bootstrap/Dropdown';\n// import { Checkbox } from 'react-bootstrap';\n\nimport './FollowUpTask.css'; //import DateTime from './DateTime'\n//import taskIcon from './taskIcon.png';\n\nimport { Routes, Route } from \"react-router-dom\";\nimport { useNavigate } from 'react-router';\nimport taskIcon from '../Asset/taskIcon.png';\nimport DateTime from '../NewTask/DateTime';\nimport React from \"react\";\nimport CreateFollowUp from \"./CreateFollowUp\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction FollowUpTask() {\n  _s();\n\n  let navigate = useNavigate();\n\n  function returnToList() {\n    navigate('/Handover');\n  }\n\n  let pat = {\n    name: this.state.patientName,\n    dob: this.state.patientDOB,\n    sex: this.state.patientSex,\n    location: this.state.patientLoc,\n    numMRN: this.state.patientMRN\n  };\n  let doc = {\n    name: \"TBD\",\n    dob: \"TBD\",\n    sex: \"TBD\",\n    email: \"TBD\",\n    numPager: \"TBD\"\n  };\n  let task = {\n    patient: pat,\n    seniority: this.state.taskSeniority,\n    notes: this.state.taskAdditionalNotes,\n    // History will be N/A since this is a new task and not a follow up task\n    history: 'N/A',\n    taskDescript: this.state.taskType,\n    creationTime: date + ' ' + time\n  };\n  var taskClickedOn = {\n    patient: {\n      name: \"TBD\",\n      dob: \"TBD\",\n      sex: \"TBD\",\n      location: \"TBD\",\n      numMRN: \"TBD\"\n    },\n    seniority: \"TBD\",\n    notes: \"TBD\",\n    history: 'N/A',\n    taskDescript: \"TBD\",\n    creationTime: \"TBD\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"FollowUpTask\",\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/FollowUpTask\",\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"headingFollowUp\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"titleFollowUp\",\n              children: \" FOLLOW UP TASK: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"taskIcon\",\n              children: [/*#__PURE__*/_jsxDEV(DateTime, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                src: taskIcon,\n                height: 75,\n                alt: \"taskIcon\",\n                id: \"taskIconImg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(CreateFollowUp, {\n            handover: returnToList,\n            prevTask: taskClickedOn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(FollowUpTask, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = FollowUpTask;\nexport default FollowUpTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"FollowUpTask\");","map":{"version":3,"sources":["/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/FollowUpTask/FollowUpTask.js"],"names":["Routes","Route","useNavigate","taskIcon","DateTime","React","CreateFollowUp","FollowUpTask","navigate","returnToList","pat","name","state","patientName","dob","patientDOB","sex","patientSex","location","patientLoc","numMRN","patientMRN","doc","email","numPager","task","patient","seniority","taskSeniority","notes","taskAdditionalNotes","history","taskDescript","taskType","creationTime","date","time","taskClickedOn"],"mappings":"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","sourcesContent":["// import React, { Component } from \"react\";\n// import ReactDOM from \"react-dom\";\n//import \"./index.css\"\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// import DropdownButton from 'react-bootstrap/DropdownButton';\n// import Dropdown from 'react-bootstrap/Dropdown';\n// import { Checkbox } from 'react-bootstrap';\nimport './FollowUpTask.css';\n//import DateTime from './DateTime'\n//import taskIcon from './taskIcon.png';\nimport {Routes, Route} from \"react-router-dom\";\nimport { useNavigate } from 'react-router';\nimport taskIcon from '../Asset/taskIcon.png';\nimport DateTime from '../NewTask/DateTime';\nimport React from \"react\";\nimport CreateFollowUp from \"./CreateFollowUp\";\n\n\n\nfunction FollowUpTask() {\n    let navigate = useNavigate() ;\n    function returnToList() {\n        navigate('/Handover')\n    }\n\n    let pat = {name: this.state.patientName, dob: this.state.patientDOB,\n        sex: this.state.patientSex, location: this.state.patientLoc, numMRN: this.state.patientMRN,};\n    let doc = {name: \"TBD\", dob: \"TBD\", sex: \"TBD\", email: \"TBD\", numPager: \"TBD\", }\n    let task = {patient: pat, seniority: this.state.taskSeniority, notes: this.state.taskAdditionalNotes,\n        // History will be N/A since this is a new task and not a follow up task\n        history: 'N/A', taskDescript: this.state.taskType, creationTime: date+' '+time,};\n\n    var taskClickedOn = {patient: {name: \"TBD\", dob: \"TBD\", sex: \"TBD\", location: \"TBD\", numMRN: \"TBD\"},\n                            seniority: \"TBD\", notes: \"TBD\", history: 'N/A', taskDescript: \"TBD\", creationTime: \"TBD\"};\n\n    return(\n        <div className={\"FollowUpTask\"}>\n            <Routes>\n                <Route path=\"/FollowUpTask\" element = {<>\n                <div id=\"headingFollowUp\">\n                    <div id=\"titleFollowUp\"> FOLLOW UP TASK: </div>\n                    <div id=\"taskIcon\">\n                        <DateTime />\n                        <img\n                            src={taskIcon}\n                            height={75}\n                            alt=\"taskIcon\"\n                            id=\"taskIconImg\"\n                        />\n                </div>\n                </div>\n                    <CreateFollowUp handover={returnToList} prevTask={taskClickedOn}/>\n                    </>}\n                />\n                </Routes>\n                    </div>\n    );\n\n}\nexport default FollowUpTask;"]},"metadata":{},"sourceType":"module"}