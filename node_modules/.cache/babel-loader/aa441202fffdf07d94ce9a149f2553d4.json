{"ast":null,"code":"var _jsxFileName = \"/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Handover/TasksBox.js\";\nimport React, { Component } from 'react';\nimport HandoverService from \"./HandoverService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TasksBox extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeDoctorHandler = event => {\n      var doc = this.state.doctorOfTask;\n      doc[event.target.name] = event.target.value;\n      this.setState({\n        doctorOfTask: doc\n      });\n    };\n\n    this.state = {\n      tasks: [],\n      loading: true,\n      doctorOfTask: {}\n    };\n    this.changeDoctorHandler = this.changeDoctorHandler.bind(this);\n  }\n\n  componentDidMount() {\n    HandoverService.getUncompletedTasks().then(res => {\n      this.setState({\n        tasks: res.data\n      }); // HandoverService.getUncompletedTasks()\n    });\n    this.setState({\n      loading: false\n    });\n  }\n\n  render() {\n    if (this.state.loading) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        background: '#abdefb',\n        margin: '8%',\n        marginTop: '2%',\n        padding: '2vh'\n      },\n      children: this.state.tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"containerOneT\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"envelope1T\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"containerT\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"priorityT\",\n              children: \" Priority: High \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"taskTypeT\",\n              children: [\" Task type: \", task.taskDescript, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"LocationT\",\n              children: [\" Location: \", task.patient.patientLocation, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"containerAT\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"containerOneTopT\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"patientNameT\",\n                children: [\" Patient Name: \", task.patient.name, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"MRNnumberT\",\n                children: [\" MRN Number: \", task.patient.numMRN, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"covidStatusT\",\n                children: \" Covid Status: Blue \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"containerOneMiddleT\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"SexT\",\n                children: [\" Sex: \", task.patient.sex, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"AgeT\",\n                children: [\" Age: \", Math.floor((new Date() - new Date(task.patient.dob)) / 31557600000) // 1000ms*60s*60mins*24hours*365.25days\n                , \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"timeScheduledT\",\n                children: \" Time Scheduled: 19:20\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"taskCreatedT\",\n                children: \" Task Created by: Dr.Lanera\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"containerOneBottomT\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"additionalNotesT\",\n                children: [\"Additional Notes: \", task.notes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                id: \"HistoryT\",\n                children: [\" \", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"containerButtons\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"followUpButton\",\n              onClick: null,\n              children: \"Add follow-up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"taskDoneButton\",\n              children: \"Task Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              id: \"archiveButton\",\n              children: \" Remove Task \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default TasksBox;","map":{"version":3,"sources":["/Users/amaankahmad/Documents/Amaan/Uni/3rd Year/Programming 3/Handover App/Frontend/src/Handover/TasksBox.js"],"names":["React","Component","HandoverService","TasksBox","constructor","props","changeDoctorHandler","event","doc","state","doctorOfTask","target","name","value","setState","tasks","loading","bind","componentDidMount","getUncompletedTasks","then","res","data","render","background","margin","marginTop","padding","map","task","taskDescript","patient","patientLocation","numMRN","sex","Math","floor","Date","dob","notes"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport HandoverService from \"./HandoverService\";\n\nclass TasksBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            tasks: [],\n            loading: true,\n            doctorOfTask: {},\n        }\n        this.changeDoctorHandler = this.changeDoctorHandler.bind(this);\n    }\n\n    changeDoctorHandler=(event) => {\n        var doc = this.state.doctorOfTask;\n        doc[event.target.name] = event.target.value;\n        this.setState({doctorOfTask: doc});\n    }\n\n    componentDidMount() {\n        HandoverService.getUncompletedTasks().then((res) => {\n            this.setState({tasks: res.data})\n        // HandoverService.getUncompletedTasks()\n        });\n        this.setState({loading: false})\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <div>...</div>\n        }\n        return (\n            <div style={{background:  '#abdefb', margin: '8%', marginTop: '2%', padding: '2vh'}}>\n                {\n                    this.state.tasks.map(\n                        task =>\n                            <div id=\"containerOneT\">\n                                <div id=\"envelope1T\">\n                                    <div id=\"containerT\">\n                                        <div id=\"priorityT\"> Priority: High </div>\n                                        <div id=\"taskTypeT\"> Task type: {task.taskDescript} </div>\n                                        <div id=\"LocationT\"> Location: {task.patient.patientLocation} </div>\n                                    </div>\n\n                                    <div id=\"containerAT\">\n                                        <div id=\"containerOneTopT\">\n                                            <div id=\"patientNameT\"> Patient Name: {task.patient.name} </div>\n                                            <div id=\"MRNnumberT\"> MRN Number: {task.patient.numMRN} </div>\n                                            <div id=\"covidStatusT\"> Covid Status: Blue </div>\n                                        </div>\n                                        <div id=\"containerOneMiddleT\">\n                                            <div id=\"SexT\"> Sex: {task.patient.sex} </div>\n                                            <div id=\"AgeT\"> Age: {\n                                                Math.floor(\n                                                    (new Date() - new Date(task.patient.dob))\n                                                            / 31557600000) // 1000ms*60s*60mins*24hours*365.25days\n                                            } </div>\n                                            <div id=\"timeScheduledT\"> Time Scheduled: 19:20</div>\n                                            <div id=\"taskCreatedT\"> Task Created by: Dr.Lanera</div>\n                                        </div>\n                                        <div id=\"containerOneBottomT\">\n\n                                            <div id=\"additionalNotesT\">Additional Notes: {task.notes}</div>\n                                            <div id=\"HistoryT\">\n                                                {\" \"}\n                                                {}{\" \"}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div id=\"containerButtons\">\n                                        \n                                        <label>\n                                            First Name:\n                                            {/*<input className = \"form-control\" type=\"email\" style={{margin: \"15px\"}}*/}\n                                            {/*       name={task.id} onChange={this.changeDoctorHandler} required/>*/}\n                                        </label>\n                                        <button id=\"followUpButton\" onClick={null}>Add follow-up</button>\n                                        <button id=\"taskDoneButton\" >Task Done</button>\n                                        <button id=\"archiveButton\"> Remove Task </button>\n                                    </div>\n                                </div>\n                            </div>\n                    )\n                }\n                {/*<TaskOverview/>*/}\n                {/*<TaskOverview/>*/}\n            </div>\n        );\n    }\n}\n\nexport default TasksBox;"]},"metadata":{},"sourceType":"module"}